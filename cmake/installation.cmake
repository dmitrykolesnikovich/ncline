if(MSVC OR APPLE)
	set(RUNTIME_INSTALL_DESTINATION .)
	set(README_INSTALL_DESTINATION .)
else()
	set(RUNTIME_INSTALL_DESTINATION bin)
	set(README_INSTALL_DESTINATION share/ncline)
endif()

set(CPACK_PACKAGE_NAME "ncline")
set(CPACK_PACKAGE_VENDOR "Angelo Theodorou")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "The nCine command line tool")
set(CPACK_PACKAGE_DESCRIPTION "A tool to automate the download, configure and compile processes for the engine and its accompanying projects")
set(CPACK_PACKAGE_HOMEPAGE_URL "https://ncine.github.io")
set(CPACK_PACKAGE_CONTACT "encelo@gmail.com")
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_INSTALL_DIRECTORY "ncline")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
set(CPACK_PACKAGE_CHECKSUM MD5)

install(FILES README.md DESTINATION ${README_INSTALL_DESTINATION})
if(MSVC OR APPLE)
	install(FILES LICENSE DESTINATION ${README_INSTALL_DESTINATION} RENAME LICENSE.txt)
endif()
install(TARGETS ncline RUNTIME DESTINATION ${RUNTIME_INSTALL_DESTINATION})

if(MSVC)
	set(CPACK_GENERATOR ZIP)

	set(NCLINE_SYSTEM_NAME "Win64")
	if("${CMAKE_GENERATOR}" STREQUAL "Visual Studio 16 2019")
		set(NCLINE_COMPILER "VS2019")
	elseif("${CMAKE_GENERATOR}" STREQUAL "Visual Studio 15 2017")
		set(NCLINE_COMPILER "VS2017")
	endif()
elseif(APPLE)
	set(CPACK_GENERATOR TGZ)
elseif(UNIX AND NOT APPLE)
	set(CPACK_GENERATOR TGZ)

	set(NCLINE_SYSTEM_NAME "Linux")
	if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
		set(NCLINE_COMPILER "GCC")
	elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
		set(NCLINE_COMPILER "Clang")
	endif()
elseif(MINGW)
	set(CPACK_GENERATOR TGZ)

	set(NCLINE_SYSTEM_NAME "MinGW")
	if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
		set(NCLINE_COMPILER "GCC")
	elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
		set(NCLINE_COMPILER "Clang")
	endif()
endif()

# Custom override of CPack package name
if(DEFINED NCLINE_SYSTEM_NAME)
	if(DEFINED NCLINE_COMPILER)
		set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${NCLINE_SYSTEM_NAME}-${NCLINE_COMPILER})
	else()
		set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${NCLINE_SYSTEM_NAME})
	endif()
endif()

include(CPack)
